/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package barbarloan.layout;

import barbarloan.connection.ConnectionDB;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

/**
 *
 * @author Ansori San
 */
public class DashboardAdmin extends javax.swing.JFrame {

    /**
     * Creates new form DashboardAdmin
     */
    public DashboardAdmin() {
        initComponents();
        this.showTable(reqTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        reqTable = new javax.swing.JTable();
        tvRequest = new javax.swing.JLabel();
        Logout = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        Data = new javax.swing.JMenu();
        employees = new javax.swing.JMenuItem();
        usersMenuItem = new javax.swing.JMenuItem();
        tools = new javax.swing.JMenuItem();
        Log = new javax.swing.JMenu();
        borrow = new javax.swing.JMenuItem();
        returns = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Admin Dashboard");

        reqTable.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N
        reqTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "#", "Employee Name", "Tools", "Quantity", "Status", "Borrow Date", "Duration", "aidi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reqTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    reqTableMouseClicked(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });
        jScrollPane1.setViewportView(reqTable);

        tvRequest.setFont(new java.awt.Font("Product Sans", 1, 18)); // NOI18N
        tvRequest.setForeground(java.awt.Color.white);
        tvRequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tvRequest.setText("Request");
        tvRequest.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        Logout.setBackground(java.awt.Color.white);
        Logout.setFont(new java.awt.Font("Product Sans", 1, 12)); // NOI18N
        Logout.setForeground(new java.awt.Color(33, 150, 243));
        Logout.setText("Logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(tvRequest, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(Logout, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Logout))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tvRequest, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Logout)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tvRequest)
                    .addContainerGap(403, Short.MAX_VALUE)))
        );

        jMenuBar2.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N

        Data.setText("Data");
        Data.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N

        employees.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        employees.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N
        employees.setText("Employees");
        employees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeesMouseClicked(evt);
            }
        });
        employees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeesActionPerformed(evt);
            }
        });
        Data.add(employees);

        usersMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        usersMenuItem.setText("Users");
        usersMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersMenuItemActionPerformed(evt);
            }
        });
        Data.add(usersMenuItem);

        tools.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        tools.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N
        tools.setText("Tools");
        tools.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolsActionPerformed(evt);
            }
        });
        Data.add(tools);

        jMenuBar2.add(Data);

        Log.setText("Log");
        Log.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N

        borrow.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        borrow.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N
        borrow.setText("Borrow");
        borrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowActionPerformed(evt);
            }
        });
        Log.add(borrow);

        returns.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        returns.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N
        returns.setText("Return");
        returns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnsActionPerformed(evt);
            }
        });
        Log.add(returns);

        jMenuBar2.add(Log);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void returnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnsActionPerformed
        LogReturn logReturn = new LogReturn();
        jDesktopPane1.add(logReturn);
        logReturn.setVisible(true);
    }//GEN-LAST:event_returnsActionPerformed

    private void employeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeesActionPerformed
        Employees employees = new Employees();
        jDesktopPane1.add(employees);
        employees.setVisible(true);
    }//GEN-LAST:event_employeesActionPerformed

    private void employeesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_employeesMouseClicked

    private void toolsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolsActionPerformed
       Tools tools = new Tools();
        jDesktopPane1.add(tools);
        tools.setVisible(true);
    }//GEN-LAST:event_toolsActionPerformed

    private void borrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowActionPerformed
        LogBorrow logBorrow = new LogBorrow();
        jDesktopPane1.add(logBorrow);
        logBorrow.setVisible(true);
    }//GEN-LAST:event_borrowActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_LogoutActionPerformed

    private void usersMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersMenuItemActionPerformed
        User users = new User();
        jDesktopPane1.add(users);
        users.setVisible(true);
    }//GEN-LAST:event_usersMenuItemActionPerformed

    private void reqTableMouseClicked(java.awt.event.MouseEvent evt) throws SQLException {//GEN-FIRST:event_reqTableMouseClicked
        ID = reqTable.getModel().getValueAt(reqTable.getSelectedRow(), 7).toString();
        String getStatus = reqTable.getModel().getValueAt(reqTable.getSelectedRow(),4).toString();
//        JOptionPane.showMessageDialog(null, ID);
        if (!getStatus.equals("Return")) {
            int option = JOptionPane.showConfirmDialog(null,"Are u sure to accept this request?","atention",JOptionPane.YES_NO_OPTION);
            if (option == 0) {
                try {
                    String duration = JOptionPane.showInputDialog("Set Duration in Days",JOptionPane.YES_OPTION);

                    if (!(duration == null)) {
                        int getDuration = Integer.parseInt(duration);
                        Connection conn = ConnectionDB.conn();
                        String editQuery = "update request set return_date = date_add((select loan_date from request where id = "+ID+"), interval "+getDuration+" day) where id = "+ID;
                        PreparedStatement preparedStatementEdit = conn.prepareStatement(editQuery);
                        preparedStatementEdit.execute();
                        String insertQuery = "insert into loan_list values (null,"+ID+",'-')";
                        PreparedStatement preparedStatement = conn.prepareStatement(insertQuery);
                        preparedStatement.execute();
                        JOptionPane.showMessageDialog(null, "You have accept request borrow");
                        showTable(reqTable);
                    } else {
                        JOptionPane.showMessageDialog(null, "Please set duration!");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Stock Must Number!");
                    JOptionPane.showMessageDialog(null, e.toString());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "This tools has been return");
        }
    }//GEN-LAST:event_reqTableMouseClicked

    private void showTable(JTable table) {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("#");
        tableModel.addColumn("Employee Name");
        tableModel.addColumn("Tool");
        tableModel.addColumn("Quantity");
        tableModel.addColumn("Status");
        tableModel.addColumn("Borrow Date");
        tableModel.addColumn("Return Date");
        tableModel.addColumn("");

        try {
            Connection conn = ConnectionDB.conn();
            String sqlQuery = "select a.quantity, a.status, a.loan_date, a.return_date, b.name, c.name, a.id from request as a join detail_user as b on a.detailUser_id = b.id join tool as c on a.tool_id = c.id";
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery(sqlQuery);
            int no = 0;

            while (resultSet.next()) {
                no++;
                tableModel.addRow(new Object[] {
                        no,
                        resultSet.getString(5),
                        resultSet.getString(6),
                        resultSet.getString(1),
                        resultSet.getString(2),
                        resultSet.getString(3),
                        resultSet.getString(4),
                        resultSet.getString(7)
                });
            }

            table.setModel(tableModel);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e.toString());
        }

        reqTable.removeColumn(reqTable.getColumnModel().getColumn(7));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private String ID = "";
    private javax.swing.JMenu Data;
    private javax.swing.JMenu Log;
    private javax.swing.JButton Logout;
    private javax.swing.JMenuItem borrow;
    private javax.swing.JMenuItem employees;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable reqTable;
    private javax.swing.JMenuItem returns;
    private javax.swing.JMenuItem tools;
    private javax.swing.JLabel tvRequest;
    private javax.swing.JMenuItem usersMenuItem;
    // End of variables declaration//GEN-END:variables
}
